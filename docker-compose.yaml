version: '3.8'
services:


  ############################## mosquitto
  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    volumes:
      - ./opt/mosquitto:/mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    networks:
      - serverlan



  ############################## node-red
  nodered:
    image: nodered/node-red:latest
    container_name: nodered
    ports:
      - 1880:1880
    networks:
      - serverlan
    volumes:
      - ./opt/node-red/data:/data




  ############################## influxdb
  influxdb:
    image: influxdb
    container_name: influxdb
    restart: always
    networks:
      - serverlan
    ports:
      - 8086:8086
    #volumes:
    #  - ./opt/influxdb:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME} # sourced from .env
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD} # sourced from .env
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG} # sourced from .env
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_RETENTION=1d
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_PASSWORD}




  ############################## modelserver
  modelserver:
    image: siuwaikau/modelserver
    container_name: modelserver
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - serverlan



  ############################## watchtower
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_DEBUG=true
      - WATCHTOWER_TRACE=true
      - WATCHTOWER_POLL_INTERVAL=60
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_TOKEN_FOR_MODEL_SERVER} # sourced from .env



networks:
  serverlan:  