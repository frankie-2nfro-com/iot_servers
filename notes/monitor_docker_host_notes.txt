# To monitor the docker running status liked CPU, MEM, will setup dockers as follows:
- prometheus
- cadvisor
- redis
- grafana

# Add following to the docker-compose.yaml
prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - cadvisor

  cadvisor:
    image: zcube/cadvisor:latest # switched image
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /sys/fs/cgroup:/cgroup:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /etc/localtime:/etc/localtime:ro
    deploy:
      mode: global
      update_config:
        order: stop-first
      resources:
        reservations:
          memory: 80M
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9102/healthz || exit 1
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 30s
    depends_on:
      - redis
    command:
      - --housekeeping_interval=10s
      - --docker_only=true
      - --disable_metrics=percpu,sched,tcp,udp,disk,diskIO,accelerator,hugetlb,referenced_memory,cpu_topology,resctrl

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./opt/grafana/grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
      - ./opt/grafana/grafana_config.ini:/etc/grafana/config.ini
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000


# View server status:
- http://localhost:8080/ (cadvisor)
- http://localhost:3000/ (grafana)


# References:
- https://dev.to/cloudx/taming-cadvisors-high-cpu-usage-1nm5
